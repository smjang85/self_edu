server:
  port: 8080
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: reservation
          destination: storagerent
          contentType: application/json
        event-out:
          destination: storagerent
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

prop:
  payment:
    url: http://localhost:8081
  storage: 
    url: http://localhost:8082
  log:
    url: http://localhost:8086
feign:
  payment:
    url: http://localhost:8081
  storage:
    url: http://localhost:8082
  log:
    url: http://localhost:8086
  httpclient:
    connection-timeout: 1
  hystrix:
    enabled: true
  client:
    config:
      default:
        loggerLevel: BASIC
#        connectTimeout: 5000
#        readTimeout: 5000
hystrix:
  command:
    # 전역설정
    default:
      execution.isolation.thread.timeoutInMilliseconds: 610

server:
  port: 8083
---

spring:
  profiles: docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: reservation
          destination: storagerent
          contentType: application/json
        event-out:
          destination: storagerent
          contentType: application/json

prop:
  payment:
    url: http://payment:8080
  storage:
    url: http://storage:8080
  log:
    url: http://log:8080

feign:
  payment:
    url: http://payment:8080
  storage:
    url: http://storage:8080
  log:
    url: http://log:8080
  httpclient:
    connection-timeout: 1
  hystrix:
    enabled: true
  client:
    config:
      default:
        loggerLevel: FULL
#        connectTimeout: 5000
#        readTimeout: 5000
hystrix:
  command:
    # 전역설정
    default:
      execution.isolation.thread.timeoutInMilliseconds: 610
        
